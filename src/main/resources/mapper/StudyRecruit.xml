<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bit.naver.mapper.StudyRecruitMapper">

    <resultMap id="studyResultMap" type="bit.naver.entity.StudyGroup">
        <id property="studyIdx" column="study_idx" />
        <result property="studyLeaderIdx" column="study_leader_idx" />
        <result property="studyTitle" column="study_title" />
        <result property="description" column="description" />
        <result property="category" column="category" />
        <result property="studyOnline" column="study_online" />
        <result property="meetingTime" column="meeting_time" />
        <result property="latitude" column="latitude" />
        <result property="longitude" column="longitude" />
        <result property="age" column="age" />
        <result property="capacity" column="capacity" />
        <result property="gender" column="gender" />
        <result property="startDate" column="start_date" />
        <result property="endDate" column="end_date" />
        <result property="status" column="status" />
        <result property="createdAt" column="created_at" />
    </resultMap>

    <select id="getAllStudy_9" resultType="bit.naver.entity.StudyGroup">
        SELECT
            sg.study_idx AS studyIdx,
            sg.study_leader_idx AS studyLeaderIdx,
            sg.study_title AS studyTitle,
            sg.description_title AS descriptionTitle,
            sg.likes_count AS likesCount,
            sg.report_count AS reportCount,
            sg.description AS description,
            sg.category AS category,
            sg.study_online AS studyOnline,
            sg.meeting_time AS meetingTime,
            sg.latitude AS latitude,
            sg.longitude AS longitude,
            sg.age AS age,
            sg.capacity AS capacity,
            sg.gender AS gender,
            sg.start_date AS startDate,
            sg.end_date AS endDate,
            sg.image AS image,
            sg.status AS status,
            sg.created_at AS createdAt,
            u.name AS leaderName,
            IFNULL(lr.study_idx, 0) AS isLike
        FROM
            Studies sg
                LEFT JOIN Users u
                          ON sg.study_leader_idx = u.user_idx
                LEFT JOIN LikeStudy lr
                          ON sg.study_idx = lr.study_idx
                              AND lr.user_idx = #{userIdx}
        WHERE
            sg.status = 'RECRUITING'
        ORDER BY
            RAND()
        LIMIT 9
    </select>

    <select id="getAllStudies" resultType="bit.naver.entity.StudyGroup">
        SELECT
            sg.study_idx AS studyIdx,
            sg.study_leader_idx AS studyLeaderIdx,
            sg.study_title AS studyTitle,
            sg.description_title AS descriptionTitle,
            sg.likes_count AS likesCount,
            sg.report_count AS reportCount,
            sg.description AS description,
            sg.category AS category,
            sg.study_online AS studyOnline,
            sg.meeting_time AS meetingTime,
            sg.latitude AS latitude,
            sg.longitude AS longitude,
            sg.age AS age,
            sg.capacity AS capacity,
            sg.gender AS gender,
            sg.start_date AS startDate,
            sg.end_date AS endDate,
            sg.image AS image,
            sg.status AS status,
            sg.created_at AS createdAt,
            u.name AS leaderName,
            IFNULL(lr.study_idx, 0) AS isLike
        FROM
            Studies sg
              LEFT JOIN Users u
                  ON sg.study_leader_idx = u.user_idx
                LEFT JOIN LikeStudy lr
                          ON sg.study_idx = lr.study_idx
                              AND lr.user_idx = #{userIdx}
        WHERE
            sg.status = 'RECRUITING'
    </select>

    <select id="getStudyById" parameterType="java.lang.Long" resultType="bit.naver.entity.StudyGroup">
        SELECT
            sg.study_idx AS studyIdx,
            sg.study_leader_idx AS studyLeaderIdx,
            sg.study_title AS studyTitle,
            sg.description_title AS descriptionTitle,
            sg.likes_count AS likesCount,
            sg.report_count AS reportCount,
            sg.description AS description,
            sg.category AS category,
            sg.study_online AS studyOnline,
            sg.meeting_time AS meetingTime,
            sg.latitude AS latitude,
            sg.longitude AS longitude,
            sg.age AS age,
            sg.capacity AS capacity,
            sg.gender AS gender,
            sg.start_date AS startDate,
            sg.end_date AS endDate,
            sg.image AS image,
            sg.status AS status,
            sg.created_at AS createdAt,
            u.name AS leaderName,
            IFNULL(lr.study_idx, 0) AS isLike
        FROM
            Studies sg
                LEFT JOIN Users u
                          ON sg.study_leader_idx = u.user_idx
                LEFT JOIN LikeStudy lr
                          ON sg.study_idx = lr.study_idx
                              AND lr.user_idx = #{userIdx}
        WHERE sg.study_idx = #{studyIdx}

    </select>

    <insert id="insertStudyMember" parameterType="bit.naver.entity.StudyMembers">
        INSERT INTO StudyMembers (study_idx, user_idx, role, status, join_reason, created_at, updated_at)
        VALUES (#{studyIdx}, #{userIdx}, #{role}, #{status}, #{joinReason}, #{createdAt}, #{updatedAt})
    </insert>


    <insert id="insertLike" parameterType="bit.naver.entity.LikeStudyEntity">
        INSERT INTO LikeStudy (user_idx, study_idx, created_at)
        VALUES (#{userIdx}, #{studyIdx}, NOW())
    </insert>

    <update id="plusLike">
        UPDATE Studies
        SET likes_count = likes_count + 1
        WHERE study_idx = #{studyIdx}
    </update>

    <delete id="deleteLike">
        DELETE FROM LikeStudy
        WHERE study_idx = #{studyIdx}
          AND user_idx = #{userIdx}
    </delete>

    <update id="minusLike">
        UPDATE Studies
        SET likes_count = likes_count - 1
        WHERE study_idx = #{studyIdx}
    </update>

    <insert id="updateReport">
        UPDATE Studies
        SET report_count = report_count + 1
        WHERE study_idx = #{studyIdx}
    </insert>

</mapper>

