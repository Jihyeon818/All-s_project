<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
<c:set var="userVo" value="${sessionScope.userVo}"/>
<c:set var="root" value="${pageContext.request.contextPath}"/>
<c:set var="currentURI" value="${pageContext.request.requestURL}" />

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ïä§ÌÑ∞Îîî Î™®Ïßë > Ïä§ÌÑ∞Îîî > Í≥µÎ∂Ä > All's</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="${root}/resources/css/common.css">
    <link rel="stylesheet" href="${root}/resources/css/pagenation.css">
    <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css">
    <link rel="stylesheet" href="${root}/resources/css/slider.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script type="text/javascript" src="${root}/resources/js/common.js" charset="UTF-8" defer></script>
    <script type="text/javascript"
            src="//dapi.kakao.com/v2/maps/sdk.js?appkey=${kakaoMapApiKey}&libraries=clusterer,services"></script>
    <meta name="_csrf" content="${_csrf.token}"/>
    <meta name="_csrf_header" content="${_csrf.headerName}"/>
    <style>  .cafe-info-window {
        background-color: white;
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        width: 200px;
    }

    .map-search-container {
        position: absolute;
        top: 10px;
        left: 10px;
        z-index: 2; /* ÏßÄÎèÑ ÏúÑÏóê ÌëúÏãúÎêòÎèÑÎ°ù ÏÑ§Ï†ï */
    }

    .map-search-container input[type="text"] {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        z-index: 2;
    }

    .map-search-container button {
        padding: 8px 12px;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 4px;
        cursor: pointer;
        z-index: 2;
    }</style>
</head>
<body>
<jsp:include page="../include/header.jsp"/>
<!-- Ï§ëÏïô Ïª®ÌÖåÏù¥ÎÑà -->
<div id="container">
    <section class="mainContainer">
        <!-- Î©îÎâ¥ ÏòÅÏó≠ -->
        <nav>
            <jsp:include page="../include/navbar.jsp"/>
        </nav>
        <!-- Î≥∏Î¨∏ ÏòÅÏó≠ -->
        <main>
            <!--Î™®Î∞îÏùº Î©îÎâ¥ ÏòÅÏó≠-->
            <div class="m-menu-area" style="display: none;">
                <jsp:include page="../include/navbar.jsp"/>
            </div>
            <!--Í∞Å ÌéòÏù¥ÏßÄÏùò ÏΩòÌÖêÏ∏†-->
            <div id="content">
                <h1>Ïä§ÌÑ∞Îîî Î™®Ïßë</h1>
                <!--Î≥∏Î¨∏ ÏΩòÌÖêÌä∏-->
                <div class="maxcontent">
                    <div class="list-title flex-between">
                        <div>
                            <i class="bi bi-map"></i>
                            <label for="studyLocation">
                                Í∞ïÎÇ®Íµ¨
                            </label>
                            <input type="button" id="studyLocation" class="studyLocation" value="ÏßÄÎèÑ ÏÑ†ÌÉù">
                        </div>
                        <fieldset class="search-box flex-row">
                            <select id="searchOption" name="searchCnd" title="Í≤ÄÏÉâ Ï°∞Í±¥ ÏÑ†ÌÉù">
                                <option value="all-post">Ï†ÑÏ≤¥</option>
                                <option value="title-post">Ï†úÎ™©</option>
                                <option value="title-content">Ï†úÎ™©+ÎÇ¥Ïö©</option>
                            </select>
                            <p class="search-field">
                                <input id="searchInput" type="text" name="searchWrd" placeholder="Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî">
                                <button onclick="searchPosts()">
                                    <span class="hide">Í≤ÄÏÉâ</span>
                                    <i class="bi bi-search"></i>
                                </button>
                            </p>
                        </fieldset>
                    </div>

                    <!--Ïä¨ÎùºÏù¥Îìú Î∞∞ÎÑà-->
                    <div class="swiper-container">
                        <div class="swiper-wrapper">
                            <!-- ÎèôÏ†ÅÏúºÎ°ú ÏÉùÏÑ±Îêú Ïä¨ÎùºÏù¥Îìú ÏïÑÏù¥ÌÖúÎì§ -->
                            <c:forEach var="study" items="${study_18}">
                                <div class="swiper-slide">
                                    <div class="study-banner-item bgwhite" tabindex="0"
                                         onclick="location.href='${root}/studyRecruit/recruitReadForm?studyIdx=${study.studyIdx}'">
                                        <div class="banner-bottom flex-between">
                                            <p class="study-tag">
                                                <span class="recruit-status ${study.status eq 'CLOSED' ? 'closed' : ''}">${study.status}</span>
                                                <span class="department">${study.category}</span>
                                            </p>
                                            <!-- ÌéòÏù¥ÏßÄ ÏÉàÎ°úÍ≥†Ïπ®Ìï¥ÎèÑ Ï¢ãÏïÑÏöîÎêúÍ≤ÉÏùÄ Ïú†ÏßÄÎêòÎèÑÎ°ù -->
                                            <!-- Ï¢ãÏïÑÏöî ÏÉÅÌÉúÎ•º Î∞òÏòÅÌïòÏó¨ Î≤ÑÌäº ÌÅ¥ÎûòÏä§ ÏÑ§Ï†ï -->
                                            <c:choose>
                                                <c:when test="${study.isLike != 0}">
                                                    <button class="flex-row liked" onclick="toggleLike(this, ${study.studyIdx})">
                                                        <i class="bi bi-heart-fill"></i>
                                                        <p class="info-post"></p>
                                                    </button>
                                                </c:when>
                                                <c:otherwise>
                                                    <button class="flex-row" onclick="toggleLike(this, ${study.studyIdx})">
                                                        <i class="bi bi-heart"></i>
                                                        <p class="info-post"></p>
                                                    </button>
                                                </c:otherwise>
                                            </c:choose>
                                        </div>
                                        <div class="banner-item-top">
                                            <div class="banner-img">
                                                <c:choose>
                                                    <c:when test="${study.image != null}">
                                                        <img src="${root}${study.image}" alt="Ïä§ÌÑ∞Îîî Í∑∏Î£π ÌîÑÎ°úÌïÑ"/>
                                                    </c:when>
                                                    <c:otherwise>
                                                        <img src="${root}/resources/images/studyGroup.png" alt="Ïä§ÌÑ∞Îîî Í∑∏Î£π ÌîÑÎ°úÌïÑ"/>
                                                    </c:otherwise>
                                                </c:choose>
                                            </div>
                                            <div class="banner-title">
                                                <p class="banner-main-title">${study.studyTitle}</p>
                                                <p class="banner-id">${study.leaderName}</p>
                                            </div>
                                        </div>
                                        <p class="banner-content">${study.description}</p>
                                        <p class="study-tag">
                                            <span class="study-tagItem">#${study.gender}</span>
                                            <span class="study-tagItem">#${study.age}</span>
                                            <span class="study-tagItem">#${study.studyOnline ? "Ïò®ÎùºÏù∏" : "Ïò§ÌîÑÎùºÏù∏"}</span>
                                        </p>
                                    </div>
                                </div>
                            </c:forEach>
                        </div>

                        <!-- ÌéòÏù¥ÏßÄ ÎÑ§Ïù¥ÏÖò -->
                        <div class="swiper-pagination"></div>

                        <!-- Ïù¥Ï†Ñ, Îã§Ïùå Î≤ÑÌäº -->
                        <div class="swiper-button-prev"></div>
                        <button class="control-button"><i class="bi bi-pause"></i></button>
                        <div class="swiper-button-next"></div>
                    </div>
                    <%--Ïä¨ÎùºÏù¥Îçî ÎÅù--%>
                    <div id="map-recruitList"
                         style="width:100%; height:250px;border-radius: 5px; margin: 1em 0"> <%-- Î°úÍ∑∏Ïù∏ ÌõÑ ÏßÄÎèÑ Ïª®ÌÖåÏù¥ÎÑà --%>
                        <div class="map-search-container">
                            <button id="cafeSearchButton" class="toggle-button-map">ÎÇ¥ Ï£ºÎ≥Ä Ïπ¥Ìéò Î≥¥Í∏∞‚òï</button>
                            <button id="myLocationButton" class="toggle-button-map">ÎÇ¥ ÏúÑÏπòÎ°ú Í∞ÄÍ∏∞üìç</button> <%-- Î≤ÑÌäº Ï∂îÍ∞Ä --%>

                        </div>
                    </div>
                    <div id="studyListContainer" style="display: block;"> <%-- display: block Ï∂îÍ∞Ä --%>
                        <h3>${userVo.name}Îãò Ï£ºÎ≥ÄÏùò Ïä§ÌÑ∞Îîîüó∫Ô∏èüìå</h3>
                        <ul id="studyListHi">

                        </ul>
                    </div> <%-- Ïä§ÌÑ∞Îîî Î™©Î°ù Ïª®ÌÖåÏù¥ÎÑà Ï∂îÍ∞Ä --%>

<%--
                    <div class="recruitmentStatus">
                        <a class="recruitmentStatusSelect" href="${root}/studyRecruit/recruitList?status=RECRUITING">Î™®Ïßë Ï§ë</a>
                        <a class="" href="${root}/studyRecruit/recruitList?status=CLOSED">Î™®Ïßë ÎßàÍ∞ê</a>
                    </div>
--%>

                    <%
                        String status = request.getParameter("status");
                        if (status == null) {
                            status = "RECRUITING"; // Í∏∞Î≥∏Í∞í ÏÑ§Ï†ï
                        }
                    %>
                    <div class="recruitmentStatus">
                        <a class="<%= "RECRUITING".equals(status) ? "recruitmentStatusSelect" : "" %>"
                           href="${root}/studyRecruit/recruitList?status=RECRUITING">Î™®Ïßë Ï§ë</a>
                        <a class="<%= "CLOSED".equals(status) ? "recruitmentStatusSelect" : "" %>"
                           href="${root}/studyRecruit/recruitList?status=CLOSED">Î™®Ïßë ÎßàÍ∞ê</a>
                    </div>
                    <div class="recruitList">
                        <%-- Í≤åÏãúÌåê Í∏Ä --%>
                        <c:forEach var="study" items="${studies}">
                            <div class="recruitItem" data-status="${study.status}">
                                <div class="studygroup-item flex-between">
                                    <button class="imgtitle link-button"
                                            onclick="location.href='${root}/studyRecruit/recruitReadForm?studyIdx=${study.studyIdx}'">
                                        <div class="board-item flex-columleft">
                                            <div class="flex-row">
                                                <c:choose>
                                                    <c:when test="${study.image != null}">
                                                        <img src="${root}${study.image}" alt="Ïä§ÌÑ∞Îîî Í∑∏Î£π ÌîÑÎ°úÌïÑ" style="width: 50px; height: 50px; margin-right: 10px;"/>
                                                    </c:when>
                                                    <c:otherwise>
                                                        <img src="${root}/resources/images/studyGroup.png" alt="Ïä§ÌÑ∞Îîî Í∑∏Î£π ÌîÑÎ°úÌïÑ" style="width: 50px; height: 50px; margin-right: 10px;"/>
                                                    </c:otherwise>
                                                </c:choose>
                                                <div>
                                                    <p class="study-tag">
                                                        <span class="recruit-status ${study.status eq 'CLOSED' ? 'closed' : ''}">
                                                                ${study.status eq 'CLOSED' ? 'Î™®ÏßëÎßàÍ∞ê' : 'Î™®ÏßëÏ§ë'}
                                                                <span class="recruitNum">(${study.currentParticipants}/${study.capacity})&nbsp;</span>
                                                        </span>
                                                        <span class="department">${study.category}</span>
                                                        <span class="study-tagItem">#${study.gender}</span>
                                                        <span class="study-tagItem">#${study.age}</span>
                                                        <span class="study-tagItem">#${study.studyOnline ? "Ïò®ÎùºÏù∏" : "Ïò§ÌîÑÎùºÏù∏"}</span>
                                                    </p>
                                                    <h3 class="board-title">${study.studyTitle}</h3>
                                                </div>
                                            </div>
                                        </div>
                                    </button>
                                    <!-- ÌéòÏù¥ÏßÄ ÏÉàÎ°úÍ≥†Ïπ®Ìï¥ÎèÑ Ï¢ãÏïÑÏöîÎêúÍ≤ÉÏùÄ Ïú†ÏßÄÎêòÎèÑÎ°ù -->
                                    <div class="flex-row">
                                        <!-- Ï¢ãÏïÑÏöî Î≤ÑÌäº -->
                                    <c:choose>
                                        <c:when test="${study.isLike != 0}">
                                            <button class="flex-row liked" onclick="toggleLike(this, ${study.studyIdx})">
                                                <i class="bi bi-heart-fill"></i>
                                                <p class="info-post">Ï¢ãÏïÑÏöî  </p>
                                            </button>
                                        </c:when>
                                        <c:otherwise>
                                            <button class="flex-row" onclick="toggleLike(this, ${study.studyIdx})">
                                                <i class="bi bi-heart"></i>
                                                <p class="info-post">Ï¢ãÏïÑÏöî</p>
                                            </button>
                                        </c:otherwise>
                                    </c:choose>
                                    </div>
                                </div>
                                <button class="board-content link-button" onclick="location.href='recruitReadForm.jsp'">
                                        ${study.description}
                                </button>
                            </div>
                        </c:forEach>
                    </div>


<%--                    <div class="flex-row">--%>
<%--                        <button class="secondary-default" onclick="loadMore()">Î™©Î°ù ÎçîÎ≥¥Í∏∞</button>--%>
<%--                    </div>--%>


                    <!-- ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖò Î∞î ÏãúÏûë -->
                    <div class="pagination">
                        <ul>
                            <c:if test="${status == 'RECRUITING'}">
                                <c:if test="${startPage > 1}">
                                    <li><a href="?page=1&status=RECRUITING">&lt;&lt;</a></li>
                                </c:if>
                                <c:if test="${currentPage > 1}">
                                    <li><a href="?page=${currentPage - 1}&status=RECRUITING">&lt;</a></li>
                                </c:if>
                                <c:forEach begin="${startPage}" end="${endPage}" var="pageNum">
                                    <li class="${pageNum == currentPage ? 'active' : ''}">
                                        <a href="?page=${pageNum}&status=RECRUITING">${pageNum}</a>
                                    </li>
                                </c:forEach>
                                <c:if test="${currentPage < totalPages}">
                                    <li><a href="?page=${currentPage + 1}&status=RECRUITING">&gt;</a></li>
                                </c:if>
                                <c:if test="${endPage < totalPages}">
                                    <li><a href="?page=${totalPages}&status=RECRUITING">&gt;&gt;</a></li>
                                </c:if>
                            </c:if>

                            <c:if test="${status == 'CLOSED'}">
                                <c:if test="${startPage > 1}">
                                    <li><a href="?page=1&status=CLOSED">&lt;&lt;</a></li>
                                </c:if>
                                <c:if test="${currentPage > 1}">
                                    <li><a href="?page=${currentPage - 1}&status=CLOSED">&lt;</a></li>
                                </c:if>
                                <c:forEach begin="${startPage}" end="${endPage}" var="pageNum">
                                    <li class="${pageNum == currentPage ? 'active' : ''}">
                                        <a href="?page=${pageNum}&status=CLOSED">${pageNum}</a>
                                    </li>
                                </c:forEach>
                                <c:if test="${currentPage < totalPages}">
                                    <li><a href="?page=${currentPage + 1}&status=CLOSED">&gt;</a></li>
                                </c:if>
                                <c:if test="${endPage < totalPages}">
                                    <li><a href="?page=${totalPages}&status=CLOSED">&gt;&gt;</a></li>
                                </c:if>
                            </c:if>
                        </ul>
                    </div>
                    <!-- ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖò Î∞î ÎÅù -->
                </div>
                <%--Î≥∏Î¨∏ ÏΩòÌÖêÏ∏† ÎÅù--%>
            </div>
            <%--ÏΩòÌÖêÏ∏† ÎÅù--%>
        </main>
    </section>
</div>
<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<script src="${root}/resources/js/slider.js"></script>
<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<script src="${root}/resources/js/slider.js"></script>
<jsp:include page="../include/footer.jsp"/>
<jsp:include page="../include/timer.jsp"/>
</body>
<script>

    document.addEventListener("DOMContentLoaded", function () {
        const contextPath = 'http://localhost:8080/WEB-INF/views/';
        const currentURI = '${currentURI}';

        console.log("ÌòÑÏû¨ URL: "+currentURI)
    });


    document.addEventListener("DOMContentLoaded", function () {
        var searchInput = document.getElementById("searchInput");
        searchInput.addEventListener("keypress", function (event) {
            if (event.key === "Enter") {
                event.preventDefault();
                searchPosts();
            }
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const statusElements = document.querySelectorAll('.recruit-status');

        statusElements.forEach(element => {
            const status = element.innerText;

            if (status === 'RECRUITING') {
                element.innerText = 'Î™®ÏßëÏ§ë';
            } else if (status === 'CLOSED') {
                element.innerText = 'Î™®ÏßëÎßàÍ∞ê';
            }
        });
    });

    // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Î™®Ïßë Ï§ëÏù∏ Ïä§ÌÑ∞ÎîîÎßå ÌëúÏãú
    $(document).ready(function() {
        filterStudies('RECRUITING');

        // ÏßÄÏó≠ Ï†ïÎ≥¥ Í∞ÄÏ†∏ÏôÄÏÑú ÌëúÏãú
        var savedLocationName = localStorage.getItem("locationName");
        if (savedLocationName) {
            $("#studyLocation").prev("label").text(savedLocationName);
        }
    });

    //Í≤ÄÏÉâ Î≤ÑÌäº
    function searchPosts() {
        let searchKeyword = document.getElementById('searchInput').value;
        let searchOption = document.getElementById('searchOption').value;

        console.log("Search Option: " + searchOption);
        console.log("search Keyword: " + searchKeyword);

        window.location.href = "${root}/studyRecruit/recruitList?searchKeyword=" + searchKeyword + "&searchOption=" + searchOption;
    }

    function redirectToStudyDetail(studyIdx) {
        var url = "${root}/studyRecruit/recruitReadForm?studyIdx=" + studyIdx;
        window.location.href = url;
    }

    function toggleLike(element, idx) {
        const icon = element.querySelector('i');
        const isLiked = !element.classList.contains('liked');
        const csrfToken = $("meta[name='_csrf']").attr("content");
        const csrfHeader = $("meta[name='_csrf_header']").attr("content");

        if (isLiked) {
            element.classList.add('liked');
            icon.className = 'bi bi-heart-fill';
            $.ajax({
                method: 'POST',
                url: '/studyRecruit/insertLike',
                data: { studyIdx: idx, userIdx: ${userVo.userIdx} },
                beforeSend: function(xhr) {
                    xhr.setRequestHeader(csrfHeader, csrfToken);
                },
                success: function(response) {
                    console.log("Like inserted successfully.");
                },
                error: function(error) {
                    console.error("Error inserting like:", error);
                }
            });
        } else {
            element.classList.remove('liked');
            icon.className = 'bi bi-heart';
            $.ajax({
                method: 'POST',
                url: '/studyRecruit/deleteLike',
                data: { studyIdx: idx, userIdx: ${userVo.userIdx} },
                beforeSend: function(xhr) {
                    xhr.setRequestHeader(csrfHeader, csrfToken);
                },
                success: function(response) {
                    console.log("Like removed successfully.");
                },
                error: function(error) {
                    console.error("Error removing like:", error);
                }
            });
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        var searchInput = document.getElementById("searchInput");
        searchInput.addEventListener("keypress", function (event) {
            if (event.key === "Enter") {
                event.preventDefault();
                searchPosts();
            }
        });
    });

</script>
<script>

    $(document).ajaxSend(function (e, xhr, options) {
        xhr.setRequestHeader('X-CSRF-TOKEN', $('meta[name="_csrf"]').attr('content'));
    });

    var mapRecruitList;
    var marker;
    var markers = []; // ÎßàÏª§ Î∞∞Ïó¥

    var zoomLevel = 6;
    var isWideView = false;

    // Ïù∏Ìè¨ÏúàÎèÑÏö∞ Í∞ùÏ≤¥ Î∞∞Ïó¥ (Î°úÍ∑∏Ïù∏ ÏÉÅÌÉú)
    var infowindows = [];

    var clusterer = new kakao.maps.MarkerClusterer({
        map: mapRecruitList, // ÌÅ¥Îü¨Ïä§ÌÑ∞Îü¨Î•º Ï†ÅÏö©Ìï† ÏßÄÎèÑ Í∞ùÏ≤¥
        averageCenter: true, // ÌÅ¥Îü¨Ïä§ÌÑ∞Ïóê Ìè¨Ìï®Îêú ÎßàÏª§Îì§Ïùò ÌèâÍ∑† ÏúÑÏπòÎ•º ÌÅ¥Îü¨Ïä§ÌÑ∞ ÎßàÏª§ ÏúÑÏπòÎ°ú ÏÑ§Ï†ï
        minLevel: 8 // ÌÅ¥Îü¨Ïä§ÌÑ∞ Ìï† ÏµúÏÜå ÏßÄÎèÑ Î†àÎ≤®
    });

    // ÎßàÏª§ Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±
    var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png'; // ÎßàÏª§ Ïù¥ÎØ∏ÏßÄ URL
    var imageSize = new kakao.maps.Size(24, 35);
    var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);


    // ÏßÄÎèÑ ÏÉùÏÑ± Î∞è Ï¥àÍ∏∞Ìôî (Î°úÍ∑∏Ïù∏ ÌõÑ)
    function initializeMapRecruitList() {
        var mapContainer = document.getElementById('map-recruitList');
        var mapOption = {
            center: new kakao.maps.LatLng(37.49564, 127.0275), // Ï¥àÍ∏∞ ÏßÄÎèÑ Ï§ëÏã¨Ï¢åÌëú (ÎπÑÌä∏Ï∫†ÌîÑ)
            level: zoomLevel
        };
        mapRecruitList = new kakao.maps.Map(mapContainer, mapOption);

        // ÏßÄÎèÑ ÌôïÎåÄ, Ï∂ïÏÜå Ïª®Ìä∏Î°§ ÏÉùÏÑ± Î∞è Ï∂îÍ∞Ä
        var zoomControl = new kakao.maps.ZoomControl();
        mapRecruitList.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);

        // Ï¥àÍ∏∞ ÏúÑÏπò Í∞ÄÏ†∏Ïò§Í∏∞ Î∞è ÏßÄÎèÑ Ï§ëÏã¨ ÏÑ§Ï†ï
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var lat = position.coords.latitude;
                var lon = position.coords.longitude;

                var locPosition = new kakao.maps.LatLng(lat, lon);
                mapRecruitList.setCenter(locPosition); // ÏßÄÎèÑ Ï§ëÏã¨ÏùÑ ÌòÑÏû¨ ÏúÑÏπòÎ°ú ÏÑ§Ï†ï
            }, function(error) {
                console.error('ÏúÑÏπò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.', error);
            });
        } else {
            // GeolocationÏùÑ ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏùÑ Îïå Ï≤òÎ¶¨ Î°úÏßÅ
        }

        // ÎßàÏª§Î•º ÏÉùÏÑ±Ìï©ÎãàÎã§
        marker = new kakao.maps.Marker({
            position: mapRecruitList.getCenter()
        });
        marker.setMap(mapRecruitList);

        // ÎßàÏª§ ÌÅ¥Îü¨Ïä§ÌÑ∞Îü¨ ÏÉùÏÑ± (ÏßÄÎèÑ Ï¥àÍ∏∞Ìôî ÌõÑ)
        clusterer = new kakao.maps.MarkerClusterer({
            map: mapRecruitList,
            averageCenter: true,
            minLevel: 8
        });

    }

    // ÏÇ¨Ïö©Ïûê ÏúÑÏπò Í∞ÄÏ†∏Ïò§Í∏∞ Î∞è ÏßÄÎèÑÏóê ÌëúÏãú
    function getLocationAndDisplayOnMap() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var lat = position.coords.latitude;
                var lon = position.coords.longitude;

                var locPosition = new kakao.maps.LatLng(lat, lon);
                 marker.setPosition(locPosition);

                // Î°úÍ∑∏Ïù∏ Ïó¨Î∂Ä ÌôïÏù∏ ÌõÑ ÏúÑÏπò Ï†ïÎ≥¥ Ï†ÑÏÜ°
                <sec:authorize access="isAuthenticated()">
                sendLocationToServer(lat, lon);
                </sec:authorize>
            }, function(error) {
                console.error('ÏúÑÏπò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.', error);
            });
        } else {
            // GeolocationÏùÑ ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏùÑ Îïå Ï≤òÎ¶¨ Î°úÏßÅ
        }
    }


    // ÏúÑÏπò Ï†ïÎ≥¥ ÏÑúÎ≤Ñ Ï†ÑÏÜ° Ìï®Ïàò
    function sendLocationToServer(latitude, longitude) {
        // Î°úÍ∑∏Ïù∏ Ïó¨Î∂Ä ÌôïÏù∏
        $.ajax({
            url: '/Users/updateLocation',  // ÏúÑÏπò Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏ ÏöîÏ≤≠ÏùÑ Ï≤òÎ¶¨Ìï† Ïª®Ìä∏Î°§Îü¨ URL
            type: 'POST',
            data: {latitude: latitude, longitude: longitude},
            beforeSend: function (xhr) {
                xhr.setRequestHeader('X-CSRF-TOKEN', $('meta[name="_csrf"]').attr('content'));
            },
            success: function (response) {
                console.log('ÏúÑÏπò Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏ ÏÑ±Í≥µ:', response);
            },
            error: function (xhr, status, error) {
                console.error('ÏúÑÏπò Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏ Ïã§Ìå®:', error);
            }
        });
    }

    // Ïä§ÌÑ∞Îîî ÎßàÏª§ ÌëúÏãú Ìï®Ïàò
    function displayStudyMarkers(map, studyData) {
        var markers = []; // ÎßàÏª§Îì§ÏùÑ Îã¥ÏùÑ Î∞∞Ïó¥
        // Ïä§ÌÑ∞Îîî Î™©Î°ù Ï¥àÍ∏∞Ìôî
        const studyList = document.getElementById('studyList');
        if (studyList) { // studyListÍ∞Ä nullÏù∏ÏßÄ ÌôïÏù∏
            studyList.innerHTML = ''; // Í∏∞Ï°¥ Î™©Î°ù ÎÇ¥Ïö© ÏßÄÏö∞Í∏∞
        }

        for (var i = 0; i < studyData.length; i++) {
            var study = studyData[i];
            var position = new kakao.maps.LatLng(study.latitude, study.longitude);
            var Removeable = true;

            // ÎßàÏª§ ÏÉùÏÑ±
            var marker = new kakao.maps.Marker({
                map: map,
                position: position,
                title: study.studyTitle,
                image: markerImage // ÎßàÏª§ Ïù¥ÎØ∏ÏßÄ ÏÑ§Ï†ï
            });

            markers.push(marker); // ÏÉùÏÑ±Îêú ÎßàÏª§Î•º Î∞∞Ïó¥Ïóê Ï∂îÍ∞Ä

            // Ïù∏Ìè¨ÏúàÎèÑÏö∞ ÏÉùÏÑ± Î∞è Î∞∞Ïó¥Ïóê Ï†ÄÏû•
            var infowindow = new kakao.maps.InfoWindow({
                content: '<div style="width:160px;text-align:center;padding:10px 0;border-radius: 20px;">' +
                    '<h4>' + study.studyTitle + '</h4>' +
                    '<p>' + study.category + '</p>' +
                    '<p>' + "üíö likes : " + study.likesCount + '</p>' +
                    '<p>' + "Î™®Ïßë :" + study.currentParticipants + '/' + study.capacity + '</p>' + '<br>' +
                    '<a href="${root}/studyRecruit/recruitReadForm?studyIdx=' + study.studyIdx + '" class="btn btn-primary" style="background-color: #dbe0d2;color: #000000;padding: 5px;border-radius: 5px;font-size: 10px;">ÎçîÎ≥¥Í∏∞</a>' + // ÏÉÅÏÑ∏Î≥¥Í∏∞ Î≤ÑÌäº Ï∂îÍ∞Ä
                    '</div>',
                removable: Removeable,
                yAnchor: -45 // Ïù∏Ìè¨ÏúàÎèÑÏö∞Î•º ÎßàÏª§ ÏúÑÏ™ΩÏúºÎ°ú Ïù¥Îèô
            });
            infowindows.push(infowindow);

            // ÎßàÏª§ ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Îì±Î°ù (ÌÅ¥Î°úÏ†Ä ÌôúÏö©)
            (function (marker, index) { // index Îß§Í∞úÎ≥ÄÏàò Ï∂îÍ∞Ä
                kakao.maps.event.addListener(marker, 'click', function () {
                    // Îã§Î•∏ Ïù∏Ìè¨ÏúàÎèÑÏö∞ Îã´Í∏∞
                    infowindows.forEach(function (iw) {
                        iw.close();
                    });
                    // ÌÅ¥Î¶≠Îêú ÎßàÏª§Ïóê Ìï¥ÎãπÌïòÎäî Ïù∏Ìè¨ÏúàÎèÑÏö∞ Ïó¥Í∏∞
                    infowindows[index].open(map, marker);
                });
            })(marker, i); // markerÏôÄ indexÎ•º ÌÅ¥Î°úÏ†ÄÏóê Ï†ÑÎã¨
        }
        clusterer.addMarkers(markers); // ÌÅ¥Îü¨Ïä§ÌÑ∞Îü¨Ïóê ÎßàÏª§ Ï∂îÍ∞Ä
    }



    // ÏßÄÎèÑ ÌôïÎåÄ/Ï∂ïÏÜå ÌÜ†Í∏Ä Ìï®Ïàò
    function toggleMapView() {
        var mapContainer = document.getElementById('map-recruitList');
        var toggleButton = document.getElementById('toggleButton');

        if (isWideView) {
            // ÌòÑÏû¨ ÌôïÎåÄ ÏÉÅÌÉúÏù¥Î©¥ Ï∂ïÏÜå
            getLocationAndDisplayOnMap();
            mapContainer.style.width = '100%';
            mapContainer.style.height = '250px';
            toggleButton.textContent = 'üîçÏ∞Ω ÌôïÎåÄ';

        } else {
            // ÌòÑÏû¨ Ï∂ïÏÜå ÏÉÅÌÉúÏù¥Î©¥ ÌôïÎåÄ
            getLocationAndDisplayOnMap();
            mapContainer.style.width = '100%';
            mapContainer.style.height = '800px';
            toggleButton.textContent = 'üîçÏ∞Ω Ï∂ïÏÜå';
        }
        // ÏßÄÎèÑ ÌÅ¨Í∏∞ Î≥ÄÍ≤Ω ÌõÑ relayout Ìò∏Ï∂ú (setTimeoutÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ Î†åÎçîÎßÅ ÌõÑ Ìò∏Ï∂ú)
        setTimeout(function () {
            mapRecruitList.relayout();
            // ÎîúÎ†àÏù¥ ÌõÑ ÌôîÎ©¥ Ï§ëÏã¨ÏùÑ ÏßÄÎèÑ Ï§ëÏã¨ÏúºÎ°ú Ïù¥Îèô
            setTimeout(function () {
                window.scrollTo({
                    top: mapContainer.offsetTop - (window.innerHeight - mapContainer.offsetHeight) / 2,
                    left: mapContainer.offsetLeft - (window.innerWidth - mapContainer.offsetWidth) / 2,
                    behavior: 'smooth'
                });
                moveToCurrentLocation();
            }, 500); // 0.5Ï¥à ÌõÑÏóê Ïã§Ìñâ (ÎîúÎ†àÏù¥ ÏãúÍ∞Ñ Ï°∞Ï†à Í∞ÄÎä•)
        }, 500); // 0.5Ï¥à ÌõÑÏóê relayout Ìò∏Ï∂ú (transition ÏãúÍ∞ÑÍ≥º ÎèôÏùºÌïòÍ≤å ÏÑ§Ï†ï)

        isWideView = !isWideView; // ÌôïÎåÄ ÏÉÅÌÉú Î∞òÏ†Ñ
    }
    // studyIdx Í∞íÏùÑ Ï†ÄÏû•Ìï† Î∞∞Ïó¥
    var studyIndices = [];
    // Ïä§ÌÑ∞Îîî Î™©Î°ù Ï°∞Ìöå Î∞è ÌëúÏãú Ìï®Ïàò
    function getStudyListAndDisplayList() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var lat = position.coords.latitude;
                var lon = position.coords.longitude;
                var studyIndices = [];
                $.ajax({
                    url: '/studies/nearestStudies',
                    type: 'GET',
                    dataType: 'json',
                    data: {latitude: lat, longitude: lon},
                    success: function (studyData) {
                        studyIndices = studyData.map(study => study.studyIdx); // studyIdx Î∞∞Ïó¥ ÏÉùÏÑ±

                        // Ïä§ÌÑ∞Îîî Î™©Î°ù Ï¥àÍ∏∞Ìôî
                        const studyListHi = document.getElementById('studyListHi');
                        if (studyListHi) {
                            studyListHi.innerHTML = ''; // Í∏∞Ï°¥ Î™©Î°ù ÎÇ¥Ïö© ÏßÄÏö∞Í∏∞
                        } else {
                            console.error('studyListHi ÏöîÏÜåÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.');
                            return; // Ìï®Ïàò Ï¢ÖÎ£å
                        }

                        // Ïä§ÌÑ∞Îîî Îç∞Ïù¥ÌÑ∞ Í±∞Î¶¨ÏàúÏúºÎ°ú Ï†ïÎ†¨
                        studyData.sort((a, b) => a.distance - b.distance);

                        // Í∞ÄÍπåÏö¥ Ïä§ÌÑ∞Îîî 3Í∞úÎßå Î™©Î°ùÏóê Ï∂îÍ∞Ä
                        for (let i = 0; i < Math.min(studyData.length, 3); i++) {
                            const study = studyData[i];

                            // recruitItem div ÏÉùÏÑ±
                            const recruitItem = document.createElement('div');
                            recruitItem.className = 'recruitItem';

                            // studygroup-item div ÏÉùÏÑ±
                            const studygroupItem = document.createElement('div');
                            studygroupItem.className = 'studygroup-item flex-between';
                            recruitItem.appendChild(studygroupItem);

                            // imgtitle Î≤ÑÌäº ÏÉùÏÑ±
                            const imgtitleButton = document.createElement('button');
                            imgtitleButton.className = 'imgtitle link-button';
                            imgtitleButton.onclick = function() {
                                location.href = '${root}/studyRecruit/recruitReadForm?studyIdx=' + study.studyIdx;
                            };
                            studygroupItem.appendChild(imgtitleButton);

                            // board-item div ÏÉùÏÑ±
                            const boardItem = document.createElement('div');
                            boardItem.className = 'board-item flex-columleft';
                            imgtitleButton.appendChild(boardItem);

                            // study-tag p ÏÉùÏÑ± (EL ÌëúÌòÑÏãù Ï†úÍ±∞)
                            const studyTag = document.createElement('p');
                            studyTag.className = 'study-tag';

                            // span ÏöîÏÜå ÏÉùÏÑ± Î∞è ÎÇ¥Ïö© ÏÑ§Ï†ï
                            const statusSpan = document.createElement('span');
                            statusSpan.className = 'recruit-status ' + (study.status === 'CLOSED' ? 'closed' : 'open');
                            statusSpan.textContent = study.status;
                            studyTag.appendChild(statusSpan);

                            const categorySpan = document.createElement('span');
                            categorySpan.className = 'department';
                            categorySpan.textContent = study.category;
                            studyTag.appendChild(categorySpan);

                            const genderSpan = document.createElement('span');
                            genderSpan.className = 'study-tagItem';
                            genderSpan.textContent = '#' + study.gender;
                            studyTag.appendChild(genderSpan);

                            const ageSpan = document.createElement('span');
                            ageSpan.className = 'study-tagItem';
                            ageSpan.textContent = '#' + study.age;
                            studyTag.appendChild(ageSpan);

                            const onlineSpan = document.createElement('span');
                            onlineSpan.className = 'study-tagItem';
                            onlineSpan.textContent = '#' + (study.studyOnline ? 'Ïò®ÎùºÏù∏' : 'Ïò§ÌîÑÎùºÏù∏');
                            studyTag.appendChild(onlineSpan);

                            boardItem.appendChild(studyTag);

                            // board-title h3 ÏÉùÏÑ±
                            const boardTitle = document.createElement('h3');
                            boardTitle.className = 'board-title';
                            boardTitle.textContent = study.studyTitle;
                            boardItem.appendChild(boardTitle);

                            // Ï¢ãÏïÑÏöî Î≤ÑÌäº ÏÉùÏÑ± (AJAX Ï≤òÎ¶¨ ÌïÑÏöî)
                            const likeButton = document.createElement('button');
                            likeButton.className = 'flex-row';
                            // Ï¢ãÏïÑÏöî Î≤ÑÌäºÏùò ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨ (toggleLike Ìï®Ïàò Ìò∏Ï∂ú)Îäî Î≥ÑÎèÑÎ°ú Íµ¨ÌòÑÌï¥Ïïº Ìï©ÎãàÎã§.
                            studygroupItem.appendChild(likeButton);

                            // board-content Î≤ÑÌäº ÏÉùÏÑ±
                            const boardContentButton = document.createElement('button');
                            boardContentButton.className = 'board-content link-button';
                            boardContentButton.textContent = study.description;
                            boardContentButton.onclick = function() {
                                location.href = '${root}/studyRecruit/recruitReadForm?studyIdx=' + study.studyIdx;
                            };
                            recruitItem.appendChild(boardContentButton);

                            // studyListÏóê recruitItem Ï∂îÍ∞Ä
                            studyListHi.appendChild(recruitItem);
                        }

                    },
                    error: function (xhr, status, error) {
                        console.error('Ïä§ÌÑ∞Îîî Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.', error);
                    }
                });
            }, function (error) {
                console.error('ÏúÑÏπò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.', error);
            });
        } else {
            // GeolocationÏùÑ ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏùÑ Îïå Ï≤òÎ¶¨ Î°úÏßÅ
        }
    }

    // ÌòÑÏû¨ ÏúÑÏπòÎ°ú ÏßÄÎèÑ Ïù¥Îèô Ìï®Ïàò
    function moveToCurrentLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var lat = position.coords.latitude;
                var lon = position.coords.longitude;

                var locPosition = new kakao.maps.LatLng(lat, lon);
                marker.setPosition(locPosition);
                mapRecruitList.panTo(locPosition); // panTo Î©îÏÑúÎìú ÏÇ¨Ïö©
                // mapRecruitList.setCenter(locPosition); // ÏßÄÎèÑ Ï§ëÏã¨ÏùÑ ÌòÑÏû¨ ÏúÑÏπòÎ°ú ÏÑ§Ï†ï
            }, function(error) {
                console.error('ÏúÑÏπò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.', error);
            });
        } else {
            // GeolocationÏùÑ ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏùÑ Îïå Ï≤òÎ¶¨ Î°úÏßÅ
        }
    }

    // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú ÏßÄÎèÑ Ï¥àÍ∏∞Ìôî Î∞è ÏúÑÏπò Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
    $(document).ready(function () {

        $(document).ajaxSend(function(e, xhr, options) {
            xhr.setRequestHeader('X-CSRF-TOKEN', $('meta[name="_csrf"]').attr('content'));
        });

        initializeMapRecruitList();
        getLocationAndDisplayOnMap();
        // Ï¥àÍ∏∞ Ïä§ÌÑ∞Îîî Î™©Î°ù Ï°∞Ìöå Î∞è ÌëúÏãú
        getStudyListAndDisplayList();
        $.ajax({
            url: '/studies/listOnMap',
            type: 'GET',
            dataType: 'json',
            success: function (studyData) {
                displayStudyMarkers(mapRecruitList, studyData);
            },
            error: function (xhr, status, error) {
                console.error('Ïä§ÌÑ∞Îîî Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.', error);
            }
        });
        // 1Ï¥àÎßàÎã§ ÏúÑÏπò Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
        setInterval(getLocationAndDisplayOnMap, 1000);
        setInterval(getStudyListAndDisplayList,10000);

        // ÌÜ†Í∏Ä Î≤ÑÌäº 1 ÏÉùÏÑ± Î∞è Ï∂îÍ∞Ä (ÏßÄÎèÑ ÌôïÎåÄ/Ï∂ïÏÜå)
        var toggleButton = document.createElement('button');
        toggleButton.id = 'toggleButton';
        toggleButton.textContent = "üîçÏ∞Ω ÌôïÎåÄ";
        toggleButton.className = 'toggle-button-map';
        document.getElementById('map-recruitList').appendChild(toggleButton);

        // ÌÜ†Í∏Ä Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Îì±Î°ù
        toggleButton.addEventListener('click', toggleMapView);


        function searchCafesNearMapCenter(map) {
            // ÌòÑÏû¨ ÏúÑÏπò Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var lat = position.coords.latitude;
                    var lon = position.coords.longitude;
                    var locPosition = new kakao.maps.LatLng(lat, lon);

                    // Ïπ¥Ìéò Í≤ÄÏÉâ Í∞ùÏ≤¥ ÏÉùÏÑ± Î∞è ÏòµÏÖò ÏÑ§Ï†ï (2km Î∞òÍ≤Ω Ï†úÌïú Ï∂îÍ∞Ä)
                    var ps = new kakao.maps.services.Places(map);
                    var options = {
                        location: locPosition,
                        radius: 2000, // 2km Î∞òÍ≤Ω
                        category_group_code: 'CE7',
                        sort: kakao.maps.services.SortBy.DISTANCE
                    };

                    // Ïπ¥Ìéò Í≤ÄÏÉâ Ïã§Ìñâ
                    ps.keywordSearch('Ïπ¥Ìéò', function (data, status, pagination) {
                        if (status === kakao.maps.services.Status.OK) {
                            displayCafeMarkers(map, data.slice(0, 15)); // ÏµúÎåÄ 15Í∞úÎßå ÌëúÏãú
                        } else {
                            console.error('Ïπ¥Ìéò Í≤ÄÏÉâ Ïã§Ìå®:', status);
                        }
                    }, options);
                });
            } else {
                console.error("Geolocation is not available.");
            }
        }


        function displayCafeMarkers(map, cafes) {
            // Í∏∞Ï°¥ ÎßàÏª§ Î∞è Ïù∏Ìè¨ÏúàÎèÑÏö∞ Ï†úÍ±∞
            clusterer.clear();
            if (infowindows) {
                infowindows.forEach(function(iw) {
                    iw.close();
                });
            }
            infowindows = []; // Ïù∏Ìè¨ÏúàÎèÑÏö∞ Î∞∞Ïó¥ Ï¥àÍ∏∞Ìôî
            // Ïπ¥Ìéò ÎßàÏª§ Ïù¥ÎØ∏ÏßÄ ÏÑ§Ï†ï (Ïä§ÌîÑÎùºÏù¥Ìä∏ Ïù¥ÎØ∏ÏßÄ ÏÇ¨Ïö©)
            var imageSrc = '${root}/resources/images/icons8-Ïª§Ìîº-Ïù¥ÎèôÌï©ÎãàÎã§-64.png';
            var imageSize = new kakao.maps.Size(50, 50);
            var cafeMarkerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);

            // Ïπ¥Ìéò ÎßàÏª§ ÏÉùÏÑ± Î∞è ÌëúÏãú
            for (let i = 0; i < cafes.length; i++) {
                const cafe = cafes[i];
                const position = new kakao.maps.LatLng(cafe.y, cafe.x);

                const marker = new kakao.maps.Marker({
                    map: map,
                    position: position,
                    title: cafe.place_name,
                    image: cafeMarkerImage
                });

                // Í∞Å ÎßàÏª§Ïóê ÎåÄÌïú Ïù∏Ìè¨ÏúàÎèÑÏö∞ ÏÉùÏÑ±
                var infowindow = new kakao.maps.InfoWindow({
                    content: '<div style="width:160px;text-align:center;padding:10px 0;border-radius: 20px;">' +
                        '<h4>' + cafe.place_name + '</h4>' +
                        '<p>' + cafe.address_name + '</p>' +
                        '<p>' + cafe.phone + '</p>' +
                        '<a href="' + cafe.place_url + '" target="_blank" class="btn btn-primary" style="background-color: #dbe0d2;color: #000000;padding: 5px;border-radius: 5px;font-size: 10px;">ÏÉÅÏÑ∏ Ï†ïÎ≥¥</a>' +
                        '</div>',
                    removable: true,
                    yAnchor: 1 // Ïù∏Ìè¨ÏúàÎèÑÏö∞Î•º ÎßàÏª§ ÏïÑÎûòÏ™ΩÏúºÎ°ú Ïù¥Îèô
                });

                // ÎßàÏª§ ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Îì±Î°ù (ÌÅ¥Î°úÏ†Ä ÌôúÏö©)
                (function (marker, infowindow) {
                    kakao.maps.event.addListener(marker, 'click', function () {
                        // Î™®Îì† Ïù∏Ìè¨ÏúàÎèÑÏö∞ Îã´Í∏∞
                        infowindows.forEach(function (iw) {
                            iw.close();
                        });
                        // ÌÅ¥Î¶≠Îêú ÎßàÏª§Ïóê Ìï¥ÎãπÌïòÎäî Ïù∏Ìè¨ÏúàÎèÑÏö∞ Ïó¥Í∏∞
                        infowindow.open(map, marker);
                    });
                })(marker, infowindow); // markerÏôÄ infowindowÎ•º Ï¶âÏãú Ïã§Ìñâ Ìï®ÏàòÏóê Ï†ÑÎã¨

                // ÎßàÏª§ÏôÄ Ïù∏Ìè¨ÏúàÎèÑÏö∞Î•º Î∞∞Ïó¥Ïóê Ï∂îÍ∞Ä
                clusterer.addMarker(marker);
                infowindows.push(infowindow);
            }
        }


        // ÎÇ¥ ÏúÑÏπòÎ°ú Í∞ÄÍ∏∞ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
        const myLocationButton = document.getElementById('myLocationButton');
        myLocationButton.addEventListener('click', moveToCurrentLocation);

// Ïπ¥Ìéò Í≤ÄÏÉâ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
        let cafeSearchButton = document.getElementById('cafeSearchButton');
        // ÌÜ†Í∏Ä Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
        cafeSearchButton.addEventListener('click', function () {
            var mapContainer = document.getElementById('map-recruitList');
            if (cafeSearchButton.textContent == 'ÎÇ¥ Ï£ºÎ≥Ä Ïπ¥Ìéò Î≥¥Í∏∞‚òï') {
                clusterer.clear();
                getLocationAndDisplayOnMap(); // ÌòÑÏû¨ ÏúÑÏπòÎ°ú ÏßÄÎèÑ Ï§ëÏã¨ Ïù¥Îèô
                infowindows.forEach(function (iw) {
                    iw.close();
                });
                infowindows=[];
                searchCafesNearMapCenter(mapRecruitList);
                mapRecruitList.setLevel(3); // ÏßÄÎèÑ ÌôïÎåÄ Î†àÎ≤® ÏÑ§Ï†ï
                mapContainer.style.width = '100%';
                mapContainer.style.height = '800px';
                toggleButton.textContent = 'üîçÏ∞Ω Ï∂ïÏÜå';

                // ÏßÄÎèÑ ÌÅ¨Í∏∞ Î≥ÄÍ≤Ω ÌõÑ relayout Ìò∏Ï∂ú (setTimeoutÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ Î†åÎçîÎßÅ ÌõÑ Ìò∏Ï∂ú)
                setTimeout(function () {
                    mapRecruitList.relayout();
                    // ÎîúÎ†àÏù¥ ÌõÑ ÌôîÎ©¥ Ï§ëÏã¨ÏùÑ ÏßÄÎèÑ Ï§ëÏã¨ÏúºÎ°ú Ïù¥Îèô
                    setTimeout(function () {
                        window.scrollTo({
                            top: mapContainer.offsetTop - (window.innerHeight - mapContainer.offsetHeight) / 2,
                            left: mapContainer.offsetLeft - (window.innerWidth - mapContainer.offsetWidth) / 2,
                            behavior: 'smooth'
                        });
                         moveToCurrentLocation();
                    }, 500); // 0.5Ï¥à ÌõÑÏóê Ïã§Ìñâ (ÎîúÎ†àÏù¥ ÏãúÍ∞Ñ Ï°∞Ï†à Í∞ÄÎä•)
                }, 500); // 0.5Ï¥à ÌõÑÏóê relayout Ìò∏Ï∂ú (transition ÏãúÍ∞ÑÍ≥º ÎèôÏùºÌïòÍ≤å ÏÑ§Ï†ï)

                cafeSearchButton.textContent = 'Ï£ºÎ≥Ä Ïä§ÌÑ∞Îîî Î≥¥Í∏∞üìó';
            } else if (cafeSearchButton.textContent == 'Ï£ºÎ≥Ä Ïä§ÌÑ∞Îîî Î≥¥Í∏∞üìó') {
                clusterer.clear();
                infowindows.forEach(function (iw) {
                    iw.close();
                });
                infowindows=[];
                getLocationAndDisplayOnMap(); // ÌòÑÏû¨ ÏúÑÏπòÎ°ú ÏßÄÎèÑ Ï§ëÏã¨ Ïù¥Îèô
                getStudyListAndDisplayList(); // Ïä§ÌÑ∞Îîî Î™©Î°ù Îã§Ïãú Ï°∞Ìöå Î∞è ÌëúÏãú
                $.ajax({
                    url: '/studies/listOnMap',
                    type: 'GET',
                    dataType: 'json',
                    success: function (studyData) {
                        displayStudyMarkers(mapRecruitList, studyData);
                    },
                    error: function (xhr, status, error) {
                        console.error('Ïä§ÌÑ∞Îîî Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.', error);
                    }
                });
                mapRecruitList.setLevel(zoomLevel); // Í∏∞Î≥∏ ÌôïÎåÄ Î†àÎ≤®Î°ú Î≥µÏõê

                mapContainer.style.width = '100%';

                mapRecruitList.relayout();
                cafeSearchButton.textContent = 'ÎÇ¥ Ï£ºÎ≥Ä Ïπ¥Ìéò Î≥¥Í∏∞‚òï';
            }
        });
    });


    <%session.removeAttribute("error");%> <%-- Ïò§Î•ò Î©îÏãúÏßÄ Ï†úÍ±∞ --%>
</script>
<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<script src="${root}/resources/js/slider.js"></script>
</body>
</html>
